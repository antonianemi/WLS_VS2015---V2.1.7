<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="imageList2.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA4
        EAAAAk1TRnQBSQFMAgEBAgEAAeQBAAHkAQABIAEAASABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABgAMAASADAAEBAQABCAYAARAYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wgAAfIBEgPqB20B6wTs
        Be0B9wH/aAAB8ggTARQCEwUUARMFFAH0aAAB8wHsAW0H6wRtBusDbQH0aAAB9AG8AQ8CEAQPBQ4B7AEH
        Ae8B7QLrAewC7wH/AQAB/2YAAfQB8AEPAewBkgH3AZIB9wHtAZIB7QGSARUBDwHsAQcB7wFtAeoCEgHv
        AQcB/wEAAf8LAAL/AfEB81cAAfQB8QEQAe8B7QG8AZMBvAGTAQcBkwG8AWwBDgHtAgcB7QHsAesB7AHv
        AQcB/wEAAf8KAAH/AfQB8gH3ARQB7AHzVQAB9AHxAREB9wG8AvAB8QTwAesBDgGSAQcBbQRDAesBvAIA
        Af8IAAL/AfABvAHzAZIDFAHsAfNTAAH0AfEBFQHtAZMBvAGTAbwBkwG8AQcBvAHrAQ4B9wEHARQEAAFt
        AfACAAH/BgAC/wHyAe0B7AG8AfIB7wFtBBQBkgH0UQAB/wHxARQB7AGZARoBBwG8AZkBBwK8AW0BDgLv
        ARQDAAEOAW0B8QIAAf8GAAHzAfcC7AHtAbwB8QHtAesBbQHrBBQBkgHzAf9OAAH/AfEBEgHsARwBmQGY
        A5kBHAGZARIBDwLvARUDAAEOAesB8gcAAfQB7wHsAeoBbQHtAesB7AEHAe0BQwEAARABbQHrARMCFAFD
        Ae0B8wH/TAAB/wHxAeoBbQPvAbwBHAEHAu8B6wEOAe8BBwEUAhIBEwEOAewB8wUAAf8BvAESAfcBEgHt
        Ae8BBwK8Ae0B6wEAARQBDgEAAQ8BbQHrARMBQwEeARQB9wH/RAAB9ALxBfIB8QFtAeoF8QLwAe8B7AEP
        AgcBEQMOAQAB7QHzAgAB/wEAAfMB7QMUAe0D7wHxAbwB7AEVAUMBvAHvAewBEAEAAQ4BEgHrARMCFQEU
        Ae8B/0IAAbwHEwG8AesBQwESBOoCEgHqARMBEAEHAe8BEAEPAw4B7QH0AgAB9AEHAe8B7AEPAesB7wL3
        Au8B8QH3AesBAAHtAZMBBwGTAbwB7QEUAg4BFQFtARICFQETAQcB/0AAAfAB6wFtBOsBbQHvAesDQwEV
        AUMBEQEPAQ4BEAEOAQ8C7wPqARIB6gH3Af8CAAHzAu8B7QESBPcC7wG8AesBFQEPARoBvAHyAfABGwGT
        AbwBBwFDAQ4BEwHvAZIB6gIVAfJAAAHzAewBDwMQAg8B6gERAQ8EDgMAARABDgEABg4BEAHvAf8CAAHz
        Ae8B9wHtAW0C9wHvAfcC7wH3AesBDgHrAZkBvAEHAbwC8QEaAe8BQwEOAewB9wHsAe0B9wFtAfJAAAHz
        AZIBFQEHAfcC7wGSAQcBEgIPBA4JAAEOAQ8BEgHyAf8CAAHyAu8B6wHsAvcE7wHsARQBDgG8ARoBGwK8
        AZMC8AHsAQ4BEgLtARMBEgHsAe8B9EAAAfMB9wEVAfABBwHwAbwBGgEHBO0D7APrCW0BvAH/AgAB8QLv
        AW0B9wXvAfcB6wEOAeoBmQEcAZgBBwG8AfAB8QHvARMBDgHsAesC7AHqAfcB8QH/QAAB9AHvAREBGgGZ
        ArwBkwHwAe0B7ALtBewB6whtAbwB/wMAAfIC7wH3Bu8B7AEUAQAB7QHvARsBCAEaA5kB7AEAARIB6wEP
        AQ4BEQHrAQcB/0EAAfQBBwEQAhoCvAEHAbwBBwbsBusEbQEHBf8B8QnvAW0BDwEUAbwBBwGSAQcB7wIa
        AZMBEQEPAewBFQMAARIB9EIAAfQBvAEPAZkBHASZARwB7wHrAZIBBwHsAW0B6gESAW0B7wHsBOsBbQET
        AhQCEwH3AfEI7wHtARIBAAEQARIB7QEHAfEB8AEHAZIB7AEOARIB6gEOAgABDgG8Af9CAAH0AfABDwL3
        Ae8BBwPvAfcBFAHsAQcDEwJDAZIC6gQSBesB7wHxB+8BkgHqAREFDgEQARMC7AEUARAB6wEQAUMBDgEA
        AW0B/0MAAf8B8gEPAfcB7wMHAu8B7AEUAewBBwFDAQ4CAAEUAe0BEgETAhQCEQEHAe8BEgHqAZIB8AHx
        AfcC7wHtAesBEwEQBQ4BAAIOAQ8BDgEPAg4B6gESAQ4CAAEPAfJEAAH/AfIDQwEVAUMBEAEOAQ8BEAEP
        AewB7wETAhUBQwFtAe8BvAHwAgcB7AFDAQcB7wHrAW0B9wHxAfID8AEHAe0B7AHqARQBDwEQAQ8BDgMA
        AQ4BDwIOARUB6wIPARABDwH3Af9EAAH/AfcBEAEPBg4BEAEAAQ8FEQETAZMCvAEHAbwB9wEVAQcBFQIO
        ARQB8gL/AfQC8wHyAvEB8AG8Ae8B7QESAkMBDgFDARUBQwEUAeoC7AFtARQB6gH0RgAB8gETARQBQwMR
        Bw8BEAERARUB7AGZAbwBBwGZAbwB7AEUAQcBQwIAARMB8wHxAe8B9wHvAbwB8AXxAfAC8QG8Ae8B9wLv
        AQcCvAHwAvIB80cAAfAB7ALtBewB6wdtAesCmQEHARoBmQHsARMBBwEVAREBDwESAfMB/wEAAf8B9AHz
        AfABvAPvAQcBvAHxBPIC8QHwAbwB8AHyAfMB9AH/RwAB/wH3AewC7QTsAusFbQHtARMCvAHwAgcB7QES
        AQcBEQEQAQ4BbQH0Af8GAAL/AfQB8gHxAfABvAEHAfAJ8wH/RwAB/wHzAbwC8ATxBvAC8QERAxUDQwES
        Ae8BEAEPAQ4B6wL/DQAC/wEAAf8BAAL/XAABBwEQAQ8EDgIPAxUBFAHtAf9xAAHxAhICFAEVBUMBFQEU
        AQcB/3EAAfMB7AHtBOwB6wRtAewB9HIAAf8BBwTvA/cBkgHtAZIB9GIAAUIBTQE+BwABPgMAASgDAAGA
        AwABIAMAAQEBAAEBBgABAhYAA/8BAAH+AgABAQT/CAAB/gIAAQEE/wgAAf4CAAEBBP8IAAH+AgABAQF/
        A/8IAAH+AgABAQF/AfAC/wgAAf4CAAEBAX8B4AE/Af8IAAH+AgABAwF/AYABDwH/CAAB/gIAAQMBfgEA
        AQMB/wgAAf4CAAEDAX4CAAF/CAAB/gIAAQMB+AIAAR8IAAH+AgABAwHgAgABDwsAAQMBQAIAAQMLAAED
        DwABAw8AAQMPAAEDDwABAw8AAQcDAAEBDwABAw8AAQMPAAEHDwABDw8AAQ8PAAEfCAABgAYAAT8IAAGA
        AwABQAIAAT8IAAGAAwABfgIAAT8IAAGAAwABfwH8AacB/wgAAv8BgAEABP8IAAL/AYABAAT/CAAC/wGA
        AQEE/wgAAv8BgAEDBP8IAAs=
</value>
  </data>
</root>